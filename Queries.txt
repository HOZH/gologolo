Queries:
query all logos:
query{
  logos{
    title,
    _id,owner,items{text,color,fontSize,url,width,height,alt,uid,zOrder,xPosition,yPosition}
    ,backgroundColor,borderRadius,
    borderThickness,borderColor,
    margin,
    padding,lastUpdate
  }
  }

query logos by user:
query{
  logosByUser(owner:String!){
    title,
    _id,owner,items{text,color,fontSize,url,width,height,alt,uid,zOrder,xPosition,yPosition}
    ,backgroundColor,borderRadius,
    borderThickness,borderColor,
    margin,
    padding,lastUpdate
  }

query logo by id:
query{
  logo(id: String!){
    title,
    owner,items{text,color,fontSize,url,imgWidth,imgHeight,alt,uid,z,x,y}
    ,backgroundColor,borderRadius,
    borderThickness,borderColor,
    margin,
    padding,lastUpdate
  }
  }

query user by id:
query{
  logo(id: String!){
    title,
    owner,images{url,width,height,alt,uid,zOrder,xPosition,yPosition}
    ,texts{uid,text,color,fontSize,backgroundColor,borderRadius,
    borderThickness,borderColor,
    margin,
    padding,zOrder,xPosition,yPosition},lastUpdate
  }
  }
query all users:
query{
  user(id: String!){
     email,
   
    password,
    firstName,
    lastName,
    
    lastUpdate
  }
  }
query{
  users{
    _id, email,
   
    password,
    firstName,
    lastName,
    
    lastUpdate
  }
  }


Matations:

add logo:

mutation {
  addLogo( owner:String!,
  title:String!,
   width:Int!,
   height:Int!,
  items:[{type:String!,url:String,width:Int,height:Int,text:String,color:String,fontSize:int,alt:String,uid:String!,zOrder:Int!,xPosition:Int!,yPosition:Int!}],
  backgroundColor:String!,
  borderRadius:Int!,
    borderThickness:Int!,
    borderColor:String!,
    margin:Int!,
    padding:Int!
    ){
    lastUpdate
  }
}

update logo by id:
mutation {
  updateLogo(
    id:String!,
      title:String!,
   owner:String!,
   width:Int!,
   height:Int!,
  items:[{type:String!,url:String,width:Int,height:Int,text:String,color:String,fontSize:int,alt:String,uid:String!,zOrder:Int!,xPosition:Int!,yPosition:Int!}],
  backgroundColor:String!,
  borderRadius:Int!,
    borderThickness:Int!,
    borderColor:String!,
    margin:Int!,
    padding:Int!
  ){
    lastUpdate
  }
}

remove logo by id:

mutation {
  removeLogo(id:String!){
    _id
  }
}

remove all the logos:

mutation{
  removeAllLogos{
  result}
  }




remove logo by user:

mutation{
    removeLogosByUser(owner:String!){
  result}
  }

add user: 
mutation {
  addUser(email: String!,

    password:String!,
    firstName:String!,
    lastName:String!,
 ){
    lastUpdate
  }
}
update user by id:
mutation {
  updateUser(id:String!,
  email: String!,

    password:String!,
    firstName:String!,
    lastName:String!,
){
    lastUpdate
  }
}
remove user by id:
mutation {
  removeUser(id:String!){
    _id
  }
}

remove all the users:

mutation{
  removeAllUsers{
  result}
  }



add dummy data for testing:

clear all the users:
calling removeAllUsers

add dummy users:
calling addUser mutiple times with dummy data

clear all the logos:
calling removeAllLogos

clear logos by user
calling removeLogosByUser

add dummy logos:
calling addLogo mutiple times with dummy data






